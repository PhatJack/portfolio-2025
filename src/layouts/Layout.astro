---
import { ClientRouter } from "astro:transitions";
import Header from "../components/includes/header.astro";
import "../styles/main.css";
import "../styles/theme.css";
import "../styles/scrollbar.css";
import Sidebar from "../components/includes/sidebar.astro";
import Footer from "../components/includes/footer.astro";
import "aos/dist/aos.css";
interface Props {
  title?: string;
  description?: string;
}
const { title = "Home", description } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
    <title>{title} | Nguyen Tien Phat</title>
    <meta name="description" content={description} />
  </head>
  <body class="mx-auto bg-[#F0F8FF] dark:bg-black transition-all relative">
    <Header />
    <div id="bg-img" class="bg-hero bg-no-repeat bg-bottom bg-cover h-[600px] transition-all"></div>
    <div class="absolute top-[40vh] sm:top-[58vh] w-full h-full px-2 sm:px-4">
      <div class="max-w-[75rem] mx-auto pb-6">
        <div class="w-full grid grid-cols-1 lg:grid-cols-4 gap-4 relative">
          <Sidebar />
          <div class="w-full lg:col-span-3 flex flex-col min-w-0">
            <slot />
            <Footer />
          </div>
        </div>
      </div>
    </div>
  </body>
</html>

<style is:global>
  :root {
    /* Default theme colors (pink theme) */
    --theme-hue: 330;
    --theme-primary: hsl(330, 70%, 60%);
    --theme-primary-light: hsl(330, 70%, 95%);
    --theme-primary-dark: hsl(330, 70%, 30%);
    --theme-primary-100: hsl(330, 70%, 95%);
    --theme-primary-200: hsl(330, 70%, 90%);
    --theme-primary-300: hsl(330, 70%, 80%);
    --theme-primary-400: hsl(330, 70%, 70%);
    --theme-primary-500: hsl(330, 70%, 60%);
    --theme-primary-600: hsl(330, 70%, 50%);
    --theme-primary-700: hsl(330, 70%, 40%);
    --theme-primary-800: hsl(330, 70%, 30%);
    --theme-primary-900: hsl(330, 70%, 20%);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family:
      "Roboto",
      sans-serif,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      Segoe UI Symbol,
      "Noto Color Emoji";
    scroll-behavior: smooth;
  }
  html,
  body {
    width: 100%;
    height: 100%;
  }

  @keyframes slideDown {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
  @keyframes slideUp {
    0% {
      transform: translateY(-100%);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>
<script>
  import AOS from "aos";
  import "overlayscrollbars/overlayscrollbars.css";
  import { OverlayScrollbars } from "overlayscrollbars";
  AOS.init();
  function initCustomScrollbar() {
    const bodyElement = document.querySelector("body");
    if (!bodyElement) return;
    OverlayScrollbars(
      // docs say that a initialization to the body element would affect native functionality like window.scrollTo
      // but just leave it here for now
      {
        target: bodyElement,
        cancel: {
          nativeScrollbarsOverlaid: true, // don't initialize the overlay scrollbar if there is a native one
        },
      },
      {
        scrollbars: {
          theme: "scrollbar-base scrollbar-auto py-1",
          autoHide: "move",
          autoHideDelay: 500,
          autoHideSuspend: false,
        },
      },
    );
    document.querySelectorAll("pre").forEach((ele) => {
      OverlayScrollbars(ele, {
        scrollbars: {
          theme: "scrollbar-base scrollbar-dark px-2",
          autoHide: "leave",
          autoHideDelay: 500,
          autoHideSuspend: false,
        },
      });
    });
  }

  // Initialize theme colors
  function initializeTheme() {
    const DEFAULT_HUE = 330;
    const storedHue = localStorage.getItem('portfolio-hue');
    const hue = storedHue ? parseInt(storedHue) : DEFAULT_HUE;
    
    document.documentElement.style.setProperty('--theme-hue', hue.toString());
    document.documentElement.style.setProperty('--theme-primary', `hsl(${hue}, 70%, 60%)`);
    document.documentElement.style.setProperty('--theme-primary-light', `hsl(${hue}, 70%, 95%)`);
    document.documentElement.style.setProperty('--theme-primary-dark', `hsl(${hue}, 70%, 30%)`);
    document.documentElement.style.setProperty('--theme-primary-100', `hsl(${hue}, 70%, 95%)`);
    document.documentElement.style.setProperty('--theme-primary-200', `hsl(${hue}, 70%, 90%)`);
    document.documentElement.style.setProperty('--theme-primary-300', `hsl(${hue}, 70%, 80%)`);
    document.documentElement.style.setProperty('--theme-primary-400', `hsl(${hue}, 70%, 70%)`);
    document.documentElement.style.setProperty('--theme-primary-500', `hsl(${hue}, 70%, 60%)`);
    document.documentElement.style.setProperty('--theme-primary-600', `hsl(${hue}, 70%, 50%)`);
    document.documentElement.style.setProperty('--theme-primary-700', `hsl(${hue}, 70%, 40%)`);
    document.documentElement.style.setProperty('--theme-primary-800', `hsl(${hue}, 70%, 30%)`);
    document.documentElement.style.setProperty('--theme-primary-900', `hsl(${hue}, 70%, 20%)`);
  }

  initializeTheme();
  initCustomScrollbar();
  
  document.addEventListener("astro:after-swap", () => {
    AOS.init();
    initializeTheme();
    initCustomScrollbar();
  });
</script>
