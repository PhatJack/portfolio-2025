---
export const prerender = true;
import Layout from "@/layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import { render } from "astro:content";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => {
    return {
      params: {
        slug: project.data.slug,
      },
      props: {
        project: project,
      },
    };
  });
}
const { slug } = Astro.params;
const { project } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(project);
---

<Layout title={project.data.title}>
  <div transition:animate="fade" class="p-6 rounded-2xl bg-white dark:bg-dark dark:text-gray-200 flex flex-col space-y-3">
    <div class="flex gap-4">
      <div class="flex items-center text-theme-400 dark:text-theme-400/80 gap-1">
        <span
          class="size-7 rounded-md flex justify-center items-center bg-theme-100 dark:bg-theme-500/50 p-1"
        >
          <Icon name="fa6-regular:newspaper" />
        </span>
        <span class="text-sm">{remarkPluginFrontmatter.words} words</span>
      </div>
      <div class="flex items-center text-theme-400 dark:text-theme-400/80 gap-1">
        <span
          class="size-7 rounded-md flex justify-center items-center bg-theme-100 dark:bg-theme-500/50 p-1"
        >
          <Icon name="fa6-regular:clock" />
        </span>
        <span class="text-sm">{remarkPluginFrontmatter.minutesRead}</span>
      </div>
    </div>
    <h1 class="font-bold uppercase dark:text-gray-300">{project.data.title}</h1>
    <p class="text-gray-500">{project.data.description}</p>
    <div class="w-full flex flex-wrap gap-4">
      <div class="flex items-center text-gray-400 gap-2">
        <span
          class="size-10 rounded-md flex justify-center items-center bg-theme-100 dark:bg-theme-400 text-theme-400 dark:text-theme-100 text-lg p-1"
        >
          <Icon name="fa6-solid:calendar" />
        </span>
        <span class="font-medium text-sm">{project.data.date}</span>
      </div>
      <div class="flex items-center text-gray-400 gap-2">
        <span
          class="size-10 rounded-md flex justify-center items-center bg-theme-100 dark:bg-theme-400 text-theme-400 dark:text-theme-100 text-lg p-1"
        >
          <Icon name="fa6-solid:tags" />
        </span>
        <div class="flex items-center gap-1">
          {
            project.data.tags.map((tag, index) => (
              <>
                <span class="font-semibold text-sm px-2 py-1 rounded-md transition-all text-gray-400 hover:text-white hover:bg-theme-400 cursor-pointer">
                  {tag}
                </span>
                {index < project.data.tags.length - 1 && <span class="text-gray-400"> / </span>}
              </>
            ))
          }
        </div>
      </div>
    </div>
    <Content />
  </div>
</Layout>
